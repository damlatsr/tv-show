{"version":3,"sources":["actions/index.js","containers/SearchBox.js","components/NavbarSearch.js","components/Navbar_.js","pages/SearchPage.js","components/ShowBox.js","components/Loading.js","pages/SearchResultPage.js","pages/ShowPage.js","App.js","serviceWorker.js","reducers/requests.js","reducers/index.js","index.js"],"names":["receiveNewSearch","searchMessage","type","SearchBox","props","dispatch","onSubmit","this","onSubmitHandler","className","value","state","onChange","onSearchChangeHandler","placeholder","ref","React","Component","connect","withRouter","NavbarSearch","bind","event","setState","target","history","push","preventDefault","Form","Control","aria-label","Button","variant","Navbar_","onGoBackButtonHandler","goBack","Navbar","bg","expand","onClick","Brand","title","data-toggle","data-target","aria-controls","aria-expanded","id","SearchPage","Container","ShowBox","onClickHandler","show","Card","border","Body","image","Img","src","original","alt","name","Title","Link","Loading","Row","role","SearchResultPage","results","readyResult","self","fetch","match","params","search","then","resp","json","data","Col","CardColumns","length","map","index","key","ShowPage","status","md","genres","genre","Text","dangerouslySetInnerHTML","__html","summary","ListGroup","Item","schedule","time","days","rating","average","App","path","component","to","Boolean","window","location","hostname","initialState","requests","action","Object","assign","console","log","combineReducers","store","createStore","rootReducer","ReactDOM","render","basename","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f9d51dd.chunk.js","sourcesContent":["// actions\nexport const RECEIVE_NEW_SEARCH = 'RECEIVE_NEW_SEARCH'\nexport const RESULT_READY = 'RESULT_READY'\n\n\n\n\n// action creators\nexport const receiveNewSearch = searchMessage =>  ({\n    type: RECEIVE_NEW_SEARCH,\n    searchMessage\n})\n\n\nexport const resultReady = results =>  ({\n    type: RESULT_READY,\n    results\n})\n\n\n//reducere gidecek","import React from 'react'\nimport { connect } from 'react-redux';\nimport { receiveNewSearch } from '../actions';\nimport {withRouter} from 'react-router-dom'\n\nclass SearchBox extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    props.dispatch(receiveNewSearch({\n      searchMessage: 'batman'\n    }))\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmitHandler}>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <input type=\"search\" value={this.state.searchMessage} onChange={this.onSearchChangeHandler} placeholder=\"Search\" ref=\"search\" />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect()(withRouter(SearchBox));\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { receiveNewSearch } from '../actions';\nimport {withRouter} from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap';\n\nclass NavbarSearch extends React.Component {\n \n\n  constructor(props) {\n    super(props);\n    this.state={\n      searchMessage:''\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this, props.dispatch);\n    this.onSearchChangeHandler = this.onSearchChangeHandler.bind(this);\n  }\n \n\n  onSearchChangeHandler(event) {\n    this.setState({\n      searchMessage: event.target.value\n    })\n  }\n\n  onSubmitHandler(dispatch, event) {\n    dispatch(receiveNewSearch(this.state.searchMessage))\n    this.props.history.push(`/${this.state.searchMessage}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      \n        <Form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmitHandler}>\n          <Form.Control className=\"form-control mr-sm-2\" type=\"search\" value={this.state.searchMessage} onChange={this.onSearchChangeHandler} placeholder=\"Search\" aria-label=\"Search\" />\n          <Button variant=\"outline-success\" type=\"submit\">Search</Button>\n        </Form>\n    \n    )\n  }\n}\n\nexport default connect()(withRouter(NavbarSearch))","import React from 'react'\nimport NavbarSearch from './NavbarSearch'\nimport {withRouter} from 'react-router-dom'\nimport {Navbar, Button } from 'react-bootstrap'\n\nclass Navbar_ extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.onGoBackButtonHandler = this.onGoBackButtonHandler.bind(this)\n  }\n\n  onGoBackButtonHandler(event){\n    this.props.history.goBack()\n  }\n  render() {\n    return (\n      <div>\n        \n        <Navbar bg=\"light\" expand=\"lg\"> \n          <Button variant=\"light\" onClick={this.onGoBackButtonHandler}><span>&larr;</span></Button>\n          <Navbar.Brand>{this.props.title}</Navbar.Brand>\n          \n          <Button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </Button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n            </ul>\n            <NavbarSearch />\n          </div>\n        </Navbar>  \n      </div>\n    )\n  }\n}\n\nexport default withRouter(Navbar_)","import React from 'react'\nimport SearchBox from '../containers/SearchBox';\nimport Navbar_ from '../components/Navbar_';\nimport { Container } from 'react-bootstrap';\n\nconst SearchPage = () => (\n  \n    <Container>\n      <Navbar_ />\n      <SearchBox />\n    </Container>\n    \n\n);\n\nexport default SearchPage;\n\n/*\nclass SearchPage extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Navbar_ />\n        <SearchBox />\n      </Container>\n      \n    );\n  }\n}\n\nexport default SearchPage;\n*/","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { Card } from 'react-bootstrap';\n\n\n\nclass ShowBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this)\n  }\n  onClickHandler(event) {\n    this.props.history.push(`/show/${this.props.show.id}`)\n  }\n\n  render() {\n    return (\n        \n      <Card border=\"light\">\n        <Card.Body>\n          {\n              this.props.show.image ?\n            <Card.Img onClick={this.onClickHandler} src={this.props.show.image.original} alt={this.props.show.name} />: null\n          }\n          <Card.Title>{this.props.show.name}</Card.Title>\n          <Card.Link onClick={this.onClickHandler} >Please, <b>Click</b> to see The Details..</Card.Link>\n        </Card.Body>\n      </Card>\n     \n     \n     \n      \n    )\n  }\n}\n\nexport default withRouter(ShowBox);\n","import React from 'react'\nimport { Container,Row } from 'react-bootstrap'\n\n\nconst Loading = () => {\n  return (\n    <Container className=\"loading\">\n    <Row className=\"spinner-grow\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Row>\n  </Container>\n  );\n}\n\nexport default Loading;\n","import React from 'react'\nimport ShowBox from '../components/ShowBox';\nimport Loading from '../components/Loading';\n//import {resultReady} from '../actions/index'\nimport { connect } from 'react-redux';\nimport { Container, Row, CardColumns,Col } from 'react-bootstrap';\n\n\n\nclass SearchResultPage extends React.Component {\n  \n  state = {\n    results: null,\n    readyResult: false\n  }\n  componentDidMount() {\n    const self = this\n    fetch(`https://api.tvmaze.com/search/shows?q=${this.props.match.params.search}`)\n    .then((resp) => resp.json())\n    .then(function(data) {\n      self.setState({\n        results: data\n      })\n     // self.props.dispatch(resultReady(data))\n      \n    })\n  }\n  render() {\n    return (       \n  <Container>\n    <Row>\n      <Col>\n        <CardColumns>\n          {\n            this.state.results ?\n              this.state.results.length === 0 ?\n              <p>icerik yok</p>\n              :\n              this.state.results.map((show, index) => {\n                return <ShowBox {...show} key={index} />;\n              })\n            :\n            <Loading />\n          }\n        </CardColumns>\n      </Col>\n    </Row>\n  </Container>  \n    );\n  }\n}\n\nexport default connect()(SearchResultPage);\n\n\n\n","import React from 'react'\nimport {Container, Row, Col, Card, ListGroup} from 'react-bootstrap'\nimport Navbar_ from '../components/Navbar_'\nimport Loading from '../components/Loading'\n\n\nclass ShowPage extends React.Component {\n   constructor(props) {\n     super(props);\n     this.state = { \n       show:null,\n      };\n   }\n\n  componentDidMount() {\n    const self = this\n    fetch(`https://api.tvmaze.com/shows/${this.props.match.params.id}`)\n    .then((resp) => resp.json())\n    .then(function(data) {\n      self.setState({\n        show: data\n      })\n    })\n  }\n\n  render() {\n    return (\n      this.state.show ?\n      \n        <div className=\"show-detail\">\n         <Navbar_ title={this.state.show.name}></Navbar_>\n          <Container className=\"container\">\n            <h1 className=\"my-4\">{this.state.show.name}\n              <sub><span className=\"text-muted\"> {this.state.show.status}</span></sub>\n            </h1>\n\n            <Row>\n\n              {\n                this.state.show.image ?\n                <Col md={8}>\n                  <Card.Img className=\"img-fluid\" src={this.state.show.image.original} alt={this.state.show.name} />\n                </Col> : null\n              }\n\n              <Col md={4}>\n                {\n                  this.state.show.genres ?\n                  this.state.show.genres.map((genre, index) => {\n                    return (<span key={index} className=\"badge badge-primary m-1\">{genre}</span>);\n                  }):null\n                }\n                <Card.Title className=\"my-3\">Description</Card.Title>\n                <Card.Text dangerouslySetInnerHTML={{__html: this.state.show.summary}}></Card.Text>\n                \n                <Card.Title className=\"my-3\">Schedule</Card.Title>\n              <ListGroup variant=\"flush\">\n                  <ListGroup.Item>{\n                  this.state.show.schedule ?\n                  this.state.show.schedule.time\n                  :null\n                }</ListGroup.Item>\n                  <ListGroup.Item>{\n                  this.state.show.schedule ?\n                  this.state.show.schedule.days\n                  :null\n                }</ListGroup.Item>\n                 <ListGroup.Item  >{\n                  this.state.show.rating ?\n                  this.state.show.rating.average\n                  :null\n                }</ListGroup.Item>\n              </ListGroup>\n              </Col>\n\n            </Row>\n\n          </Container>\n        </div>\n      :\n          <Loading />\n        \n    );\n  }\n}\n\nexport default ShowPage;\n","import React from 'react';\nimport './App.css';\nimport SearchPage from './pages/SearchPage'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport SearchResultPage from './pages/SearchResultPage';\nimport ShowPage from './pages/ShowPage';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/show/:id\" component={ShowPage} />\n        <Route path=\"/search\" component={SearchPage} />\n        <Route path=\"/:search\" component={SearchResultPage} />\n        <Redirect push to=\"/batman\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {RECEIVE_NEW_SEARCH, RESULT_READY} from '../actions'\n\nconst initialState = {\n  searchMessage: '',\n  results: [],\n  readyResult: false\n}\n\nconst requests = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_NEW_SEARCH:\n      return Object.assign({}, state, {\n        searchMessage: action.searchMessage\n        \n      })\n    case RESULT_READY:\n      console.log(action)\n      return Object.assign({}, state, {\n        results: action.results,\n        readyResult: true\n      })\n    default:\n      return state\n  }\n}\n  \nexport default requests;\n","import { combineReducers } from 'redux'\nimport requests from './requests'\n\nexport default combineReducers({\n  requests\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { createStore } from 'redux'\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nlet store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>    \n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}