{"version":3,"sources":["actions/index.js","containers/SearchBox.js","components/NavbarSearch.js","components/Navbar.js","pages/SearchPage.js","components/ShowBox.js","components/Loading.js","containers/ShowBoxContainer.js","pages/SearchResultPage.js","pages/ShowPage.js","App.js","serviceWorker.js","reducers/requests.js","reducers/index.js","index.js"],"names":["APPEND_NEW_RESULTS","receiveNewSearch","searchText","console","log","a","dispatch","fetch","then","resp","json","data","appendNewResults","results","type","SearchBox","props","searchMessage","Form","onSubmit","this","onSubmitHandler","Row","className","Col","value","state","onChange","onSearchChangeHandler","placeholder","ref","React","Component","connect","withRouter","NavbarSearch","bind","event","setState","target","history","push","preventDefault","Control","aria-label","Button","variant","Navbar","onGoBackButtonHandler","goBack","bg","expand","onClick","Brand","title","data-toggle","data-target","aria-controls","aria-expanded","id","SearchPage","Container","ShowBox","onClickHandler","show","Card","border","Body","image","Img","src","original","alt","name","Title","Link","Loading","role","ShowBoxContainer","requests","length","map","index","key","actionCreators","SearchResultPage","match","params","search","ShowPage","self","status","md","genres","genre","Text","dangerouslySetInnerHTML","__html","summary","ListGroup","Item","disabled","schedule","time","days","rating","average","App","path","component","to","Boolean","window","location","hostname","initialState","action","s","Object","assign","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","basename","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mcACaA,EAAqB,qBAKrBC,EAAmB,SAAAC,GAG5B,OAFAC,QAAQC,IAAI,CAACC,EAAEH,IAER,SAAAI,GACH,OAAOC,MAAM,yCAAD,OAA0CL,IACrDM,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAASG,GACbL,EAASM,EAAiBD,SAMvBC,EAAmB,SAAAC,GAAO,MAAM,CACzCC,KAAMd,EACNa,QAASA,I,gCCdPE,E,YACJ,WAAYC,GAAQ,IAAD,6BACjB,4CAAMA,IACNA,EAAMV,SAASL,EAAiB,CAC9BgB,cAAe,YAHA,E,sEAQjB,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKC,iBACnB,kBAACC,EAAA,EAAD,CAAKC,UAAU,OACb,kBAACC,EAAA,EAAD,CAAKD,UAAU,SACb,2BAAOT,KAAK,SAASW,MAAOL,KAAKM,MAAMT,cAAeU,SAAUP,KAAKQ,sBAAuBC,YAAY,SAASC,IAAI,kB,GAbzGC,IAAMC,WAqBfC,gBAAUC,YAAWnB,I,gBCtB9BoB,E,YAGJ,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KACDU,MAAM,CACTT,cAAc,IAEhB,EAAKI,gBAAkB,EAAKA,gBAAgBe,KAArB,eAAgCpB,EAAMV,UAC7D,EAAKsB,sBAAwB,EAAKA,sBAAsBQ,KAA3B,gBANZ,E,mFAUGC,GACpBjB,KAAKkB,SAAS,CACZrB,cAAeoB,EAAME,OAAOd,U,sCAIhBnB,EAAU+B,GACxB/B,EAASL,EAAiBmB,KAAKM,MAAMT,gBACrCG,KAAKJ,MAAMwB,QAAQC,KAAnB,WAA4BrB,KAAKM,MAAMT,gBACvCoB,EAAMK,mB,+BAIN,OAEI,kBAACxB,EAAA,EAAD,CAAMK,UAAU,2BAA2BJ,SAAUC,KAAKC,iBACxD,kBAACH,EAAA,EAAKyB,QAAN,CAAcpB,UAAU,uBAAuBT,KAAK,SAASW,MAAOL,KAAKM,MAAMT,cAAeU,SAAUP,KAAKQ,sBAAuBC,YAAY,SAASe,aAAW,WACpK,kBAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBhC,KAAK,UAAvC,e,GA9BiBiB,IAAMC,WAqClBC,gBAAUC,YAAWC,I,gBCtC9BY,E,YAEJ,WAAY/B,GAAO,IAAD,8BAChB,4CAAMA,KACDgC,sBAAwB,EAAKA,sBAAsBZ,KAA3B,gBAFb,E,mFAMIC,GACpBjB,KAAKJ,MAAMwB,QAAQS,W,+BAGnB,OAGI,kBAAC,IAAD,CAAaC,GAAG,QAAQC,OAAO,MAC7B,kBAAC,IAAD,CAAkBC,QAAShC,KAAK4B,uBAAhC,QACA,kBAAC,IAAD,CAAaF,QAAQ,QAAQM,QAAShC,KAAK4B,uBAAuB,yCAClE,kBAAC,IAAYK,MAAb,KAAoBjC,KAAKJ,MAAMsC,OAE/B,kBAAC,IAAD,CAAa/B,UAAU,iBAAiBT,KAAK,SAASyC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQd,aAAW,qBACzL,0BAAMrB,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BoC,GAAG,0BAC3C,wBAAIpC,UAAU,uBAEd,kBAAC,EAAD,Y,GA3BSQ,IAAMC,WAmCZE,cAAWa,G,QCzBXa,EAVI,kBAEf,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCHAC,E,YACJ,WAAY9C,GAAQ,IAAD,8BACjB,4CAAMA,KACD+C,eAAiB,EAAKA,eAAe3B,KAApB,gBAFL,E,4EAIJC,GACbjB,KAAKJ,MAAMwB,QAAQC,KAAnB,gBAAiCrB,KAAKJ,MAAMgD,KAAKL,O,+BAIjD,OAEE,kBAACM,EAAA,EAAD,CAAMC,OAAO,SACX,kBAACD,EAAA,EAAKE,KAAN,KAEM/C,KAAKJ,MAAMgD,KAAKI,MAClB,kBAACH,EAAA,EAAKI,IAAN,CAAUjB,QAAShC,KAAK2C,eAAgBO,IAAKlD,KAAKJ,MAAMgD,KAAKI,MAAMG,SAAUC,IAAKpD,KAAKJ,MAAMgD,KAAKS,OAAU,KAE9G,kBAACR,EAAA,EAAKS,MAAN,KAAatD,KAAKJ,MAAMgD,KAAKS,MAC7B,kBAACR,EAAA,EAAKU,KAAN,CAAWvB,QAAShC,KAAK2C,gBAAzB,WAAkD,oCAAlD,+B,GAnBYhC,IAAMC,WA8BbE,cAAW4B,GCtBXc,EAVC,WACd,OACE,kBAACf,EAAA,EAAD,CAAWtC,UAAU,WACrB,kBAACD,EAAA,EAAD,CAAKC,UAAU,eAAesD,KAAK,UACjC,0BAAMtD,UAAU,WAAhB,iBCAAuD,E,4LAGF1D,KAAKJ,MAAMf,iBAAiBmB,KAAKJ,MAAMd,c,+BAIvC,OACJ,6BACI,kBAAC,EAAD,MACE,yBAAKqB,UAAU,WAEb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBAEbH,KAAKJ,MAAM+D,SAASlE,QAAQmE,OAAS,EACrC5D,KAAKJ,MAAM+D,SAASlE,QAAQoE,KAAI,SAACjB,EAAMkB,GACrC,OAAO,kBAAC,EAAD,iBAAalB,EAAb,CAAmBmB,IAAKD,QAEjC,kBAAC,EAAD,c,GAnBmBnD,IAAMC,WAkCtBC,eAJO,SAACP,GACrB,OAAOA,IAG+B0D,EAAzBnD,CAAyC6C,GC3BzCO,E,iLATX,OACE,6BACA,kBAAC,EAAD,CAAkBnF,WAAYkB,KAAKJ,MAAMsE,MAAMC,OAAOC,c,GAJ7BzD,IAAMC,W,QC4GtByD,E,YAzGZ,WAAYzE,GAAQ,IAAD,8BACjB,4CAAMA,KACDU,MAAQ,CACXsC,KAAK,MAHU,E,iFAkClB,IAAM0B,EAAOtE,KACbb,MAAM,gCAAD,OAAiCa,KAAKJ,MAAMsE,MAAMC,OAAO5B,KAC7DnD,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAASG,GACb+E,EAAKpD,SAAS,CACZ0B,KAAMrD,S,+BAMV,OACES,KAAKM,MAAMsC,KAET,yBAAKzC,UAAU,eACd,kBAAC,EAAD,CAAQ+B,MAAOlC,KAAKM,MAAMsC,KAAKS,OAC9B,kBAACZ,EAAA,EAAD,CAAWtC,UAAU,aACnB,wBAAIA,UAAU,QAAQH,KAAKM,MAAMsC,KAAKS,KACpC,6BAAK,0BAAMlD,UAAU,cAAhB,IAA+BH,KAAKM,MAAMsC,KAAK2B,UAGtD,kBAACrE,EAAA,EAAD,KAGIF,KAAKM,MAAMsC,KAAKI,MAChB,kBAAC5C,EAAA,EAAD,CAAKoE,GAAI,GACP,kBAAC3B,EAAA,EAAKI,IAAN,CAAU9C,UAAU,YAAY+C,IAAKlD,KAAKM,MAAMsC,KAAKI,MAAMG,SAAUC,IAAKpD,KAAKM,MAAMsC,KAAKS,QACnF,KAGX,kBAACjD,EAAA,EAAD,CAAKoE,GAAI,GAELxE,KAAKM,MAAMsC,KAAK6B,OAChBzE,KAAKM,MAAMsC,KAAK6B,OAAOZ,KAAI,SAACa,EAAOZ,GACjC,OAAQ,0BAAMC,IAAKD,EAAO3D,UAAU,2BAA2BuE,MAC9D,KAEL,kBAAC7B,EAAA,EAAKS,MAAN,CAAYnD,UAAU,QAAtB,eACA,kBAAC0C,EAAA,EAAK8B,KAAN,CAAWC,wBAAyB,CAACC,OAAQ7E,KAAKM,MAAMsC,KAAKkC,WAC7D,kBAACjC,EAAA,EAAKS,MAAN,CAAYnD,UAAU,QAAtB,YACF,kBAAC4E,EAAA,EAAD,CAAWrD,QAAQ,SACf,kBAACqD,EAAA,EAAUC,KAAX,CAAgBC,UAAQ,GACxBjF,KAAKM,MAAMsC,KAAKsC,SAASC,KACzBnF,KAAKM,MAAMsC,KAAKsC,SAASC,KACxB,gEAED,kBAACJ,EAAA,EAAUC,KAAX,CAAgBC,UAAQ,GACS,IAAjCjF,KAAKM,MAAMsC,KAAKsC,SAASE,KACzBpF,KAAKM,MAAMsC,KAAKsC,SAASE,KACxB,+DAEF,kBAACL,EAAA,EAAUC,KAAX,CAAgBC,UAAQ,GAEvBjF,KAAKM,MAAMsC,KAAKyC,OAAOC,QACvBtF,KAAKM,MAAMsC,KAAKyC,OAAOC,QACtB,wEAUT,kBAAC,EAAD,U,GApGa3E,IAAMC,WCed2E,E,iLAXX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWpB,IACnC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,UAAWjD,IACjC,kBAAC,IAAD,CAAOgD,KAAK,WAAWC,UAAWxB,IAClC,kBAAC,IAAD,CAAU5C,MAAI,EAACqE,GAAG,iB,GAPR/E,IAAMC,WCIJ+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5B,MACvB,2D,oBChBA6B,EAAe,CACnBtG,QAAS,IAgBIkE,EAbE,WAAmC,IAAlCrD,EAAiC,uDAAzByF,EAAcC,EAAW,uCACjD,OAAQA,EAAOtG,MACb,KAAKd,EAEH,OADAG,QAAQC,IAAI,CAACiH,EAAE3F,EAAOrB,EAAE+G,IACjBE,OAAOC,OAAO,GAAI7F,EAAO,CAC9Bb,QAASuG,EAAOvG,UAGpB,QACE,OAAOa,ICZE8F,cAAgB,CAC7BzC,a,QCSE0C,G,MAAQC,YAAYC,EAAaC,YAAgBC,OAErDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAD,CAAYO,SAAS,KACnB,kBAAC,EAAD,QAGJC,SAASC,cAAc,UH8GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7H,MAAK,SAAA8H,GACjCA,EAAaC,kB","file":"static/js/main.22d4eb77.chunk.js","sourcesContent":["// actions\nexport const APPEND_NEW_RESULTS = 'APPEND_NEW_RESULTS'\n\n\n\n\nexport const receiveNewSearch = searchText => {\n    console.log({a:searchText})\n    \n    return dispatch => {\n        return fetch(`https://api.tvmaze.com/search/shows?q=${searchText}`)\n        .then((resp) => resp.json())\n        .then(function(data) {\n          dispatch(appendNewResults(data)) \n    })\n}\n}\n\n// action creators\nexport const appendNewResults = results =>  ({\n    type: APPEND_NEW_RESULTS,\n    results: results\n})\n\n\n//reducere gidecek","import React from 'react'\nimport { connect } from 'react-redux';\nimport { receiveNewSearch } from '../actions';\nimport {withRouter} from 'react-router-dom'\nimport { Form, Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    props.dispatch(receiveNewSearch({\n      searchMessage: 'batman'\n    }))\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmitHandler}>\n        <Row className=\"row\">\n          <Col className=\"col-6\">\n            <input type=\"search\" value={this.state.searchMessage} onChange={this.onSearchChangeHandler} placeholder=\"Search\" ref=\"search\" />\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(withRouter(SearchBox));\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { receiveNewSearch } from '../actions';\nimport {withRouter} from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap';\n\nclass NavbarSearch extends React.Component {\n \n\n  constructor(props) {\n    super(props);\n    this.state={\n      searchMessage:''\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this, props.dispatch);\n    this.onSearchChangeHandler = this.onSearchChangeHandler.bind(this);\n  }\n \n\n  onSearchChangeHandler(event) {\n    this.setState({\n      searchMessage: event.target.value\n    })\n  }\n\n  onSubmitHandler(dispatch, event) {\n    dispatch(receiveNewSearch(this.state.searchMessage))\n    this.props.history.push(`/${this.state.searchMessage}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      \n        <Form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmitHandler}>\n          <Form.Control className=\"form-control mr-sm-2\" type=\"search\" value={this.state.searchMessage} onChange={this.onSearchChangeHandler} placeholder=\"Search\" aria-label=\"Search\" />\n          <Button variant=\"outline-success\" type=\"submit\">Search</Button>\n        </Form>\n    \n    )\n  }\n}\n\nexport default connect()(withRouter(NavbarSearch))","import React from 'react'\nimport NavbarSearch from './NavbarSearch'\nimport {withRouter} from 'react-router-dom'\nimport * as same from 'react-bootstrap'\n\nclass Navbar extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.onGoBackButtonHandler = this.onGoBackButtonHandler.bind(this)\n  }\n\n \n  onGoBackButtonHandler(event){\n    this.props.history.goBack()\n  }\n  render() {\n    return (\n \n        \n        <same.Navbar bg=\"light\" expand=\"lg\"> \n          <same.NavbarBrand onClick={this.onGoBackButtonHandler}>Home</same.NavbarBrand>\n          <same.Button variant=\"light\" onClick={this.onGoBackButtonHandler}><span>&larr;</span></same.Button>\n          <same.Navbar.Brand>{this.props.title}</same.Navbar.Brand>\n          \n          <same.Button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </same.Button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n            </ul>\n            <NavbarSearch />\n          </div>\n        </same.Navbar>  \n      \n    )\n  }\n}\n\nexport default withRouter(Navbar)","import React from 'react'\nimport SearchBox from '../containers/SearchBox';\nimport Navbar from '../components/Navbar';\nimport { Container } from 'react-bootstrap';\n\nconst SearchPage = () => (\n  \n    <Container>\n      <Navbar />\n      <SearchBox />\n    </Container>\n    \n\n);\n\nexport default SearchPage;","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { Card } from 'react-bootstrap';\n\n\n\nclass ShowBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this)\n  }\n  onClickHandler(event) {\n    this.props.history.push(`/show/${this.props.show.id}`)\n  }\n\n  render() {\n    return (\n        \n      <Card border=\"light\">\n        <Card.Body>\n          {\n              this.props.show.image ?\n            <Card.Img onClick={this.onClickHandler} src={this.props.show.image.original} alt={this.props.show.name} />: null\n          }\n          <Card.Title>{this.props.show.name}</Card.Title>\n          <Card.Link onClick={this.onClickHandler} >Please, <b>Click</b> to see The Details..</Card.Link>\n        </Card.Body>\n      </Card>\n     \n     \n     \n      \n    )\n  }\n}\n\nexport default withRouter(ShowBox);\n","import React from 'react'\nimport { Container,Row } from 'react-bootstrap'\n\n\nconst Loading = () => {\n  return (\n    <Container className=\"loading\">\n    <Row className=\"spinner-grow\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Row>\n  </Container>\n  );\n}\n\nexport default Loading;\n","import React from 'react'\nimport ShowBox from '../components/ShowBox'\nimport * as actionCreators from \"../actions/index\"\nimport { connect } from 'react-redux';\nimport Loading from '../components/Loading';\nimport Navbar from '../components/Navbar'\nimport {withRouter} from 'react-router-dom'\n\nclass ShowBoxContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.receiveNewSearch(this.props.searchText)\n  }\n\n  render() {\n    return (\n<div>\n    <Navbar />\n      <div className=\"row m-3\">\n         \n        <div className=\"col-10 offset-1\">\n          <div className=\"card-columns\">\n          {\n            this.props.requests.results.length > 0 ?\n            this.props.requests.results.map((show, index) => {\n              return <ShowBox {...show} key={index} />;\n            }) :\n            <Loading />\n          }\n          </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps=(state)=>{\n  return state\n};\n\nexport default connect(mapStateToProps, actionCreators)(ShowBoxContainer)","import React from 'react'\nimport ShowBoxContainer from '../containers/ShowBoxContainer';\n\n\nclass SearchResultPage extends React.Component {\n  render() {\n    return (\n      <div>\n      <ShowBoxContainer searchText={this.props.match.params.search}></ShowBoxContainer>\n    \n      </div>\n    );\n  }\n}\n\nexport default SearchResultPage;","import React from 'react'\nimport {Container, Row, Col, Card, ListGroup} from 'react-bootstrap'\nimport Navbar from '../components/Navbar'\nimport Loading from '../components/Loading'\n\n\nclass ShowPage extends React.Component {\n   constructor(props) {\n     super(props);\n     this.state = { \n       show:null,\n      };\n   }\n/*\n   componentDidUpdate(){\n    const self = this\n    fetch(`https://api.tvmaze.com/search/shows?q=${this.props.match.params.id}`)\n    .then((resp) => resp.json())\n    .then(function(data) {\n      self.setState({\n        results: data\n      })\n     // self.props.dispatch(resultReady(data))\n      \n    })\n  }\n  componentDidMount() {\n    const self = this\n    fetch(`https://api.tvmaze.com/search/shows?q=${this.props.match.params.search}`)\n    .then((resp) => resp.json())\n    .then(function(data) {\n      self.setState({\n        results: data\n      })\n     // self.props.dispatch(resultReady(data))\n      \n    })\n  }\n*/\n\n  componentDidMount() {\n    const self = this\n    fetch(`https://api.tvmaze.com/shows/${this.props.match.params.id}`)\n    .then((resp) => resp.json())\n    .then(function(data) {\n      self.setState({\n        show: data\n      })\n    })\n  }\n\n  render() {\n    return (\n      this.state.show ?\n      \n        <div className=\"show-detail\">\n         <Navbar title={this.state.show.name}></Navbar>\n          <Container className=\"container\">\n            <h1 className=\"my-4\">{this.state.show.name}\n              <sub><span className=\"text-muted\"> {this.state.show.status}</span></sub>\n            </h1>\n\n            <Row>\n\n              {\n                this.state.show.image ?\n                <Col md={8}>\n                  <Card.Img className=\"img-fluid\" src={this.state.show.image.original} alt={this.state.show.name} />\n                </Col> : null\n              }\n\n              <Col md={4}>\n                {\n                  this.state.show.genres ?\n                  this.state.show.genres.map((genre, index) => {\n                    return (<span key={index} className=\"badge badge-primary m-1\">{genre}</span>);\n                  }):null\n                }\n                <Card.Title className=\"my-3\">Description</Card.Title>\n                <Card.Text dangerouslySetInnerHTML={{__html: this.state.show.summary}}></Card.Text>\n                <Card.Title className=\"my-3\">Schedule</Card.Title>\n              <ListGroup variant=\"flush\">\n                  <ListGroup.Item disabled>{\n                  this.state.show.schedule.time ?\n                  this.state.show.schedule.time\n                  :<span>time information not found...</span>\n                }</ListGroup.Item>\n                  <ListGroup.Item disabled>{\n                  this.state.show.schedule.days != \"\" ?\n                  this.state.show.schedule.days\n                  :<span>day information not found...</span>\n                }</ListGroup.Item>\n                 <ListGroup.Item disabled>{\n\n                  this.state.show.rating.average ?\n                  this.state.show.rating.average\n                  :<span>average information not found...</span>\n                }</ListGroup.Item>\n              </ListGroup>\n              </Col>\n\n            </Row>\n\n          </Container>\n        </div>\n      :\n          <Loading />\n        \n    );\n  }\n}\n\nexport default ShowPage;\n","import React from 'react';\nimport './App.css';\nimport SearchPage from './pages/SearchPage'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport SearchResultPage from './pages/SearchResultPage';\nimport ShowPage from './pages/ShowPage';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/show/:id\" component={ShowPage} />\n        <Route path=\"/search\" component={SearchPage} />\n        <Route path=\"/:search\" component={SearchResultPage} />\n        <Redirect push to=\"/batman\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {APPEND_NEW_RESULTS} from '../actions'\n\nconst initialState = {\n  results: []\n}\n\nconst requests = (state = initialState, action) => {\n  switch (action.type) {\n    case APPEND_NEW_RESULTS:\n      console.log({s:state, a:action})\n      return Object.assign({}, state, {\n        results: action.results\n      })\n   \n    default:\n      return state\n  }\n}\n  \nexport default requests;\n","import { combineReducers } from 'redux'\nimport requests from './requests'\n\nexport default combineReducers({\n  requests\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nlet store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>    \n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}